name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  elixir-ci:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: ['22.2.8']
        elixir: ['1.10.3']

    services:
      db:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: elixir_dex_test
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - uses: actions/cache@v1
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - uses: actions/cache@v1
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Elixir - Install Deps
        env:
          MIX_ENV: test
        run: |
          mix deps.get
          mix deps.compile
        
      - name: Elixir - Warning-Free Compile
        env:
          MIX_ENV: test
        run: mix compile --warnings-as-errors

      - name: Elixir - Standard Formatting
        env:
          MIX_ENV: test
        run: mix format --check-formatted

      - name: Elixir - Code Analysis
        env:
          MIX_ENV: test
        run: mix credo --strict
      
      - name: Elixir - Run Tests
        env:
          MIX_ENV: test
        run: mix test