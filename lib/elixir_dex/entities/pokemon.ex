defmodule ElixirDex.Entities.Pokemon do
  @moduledoc """
  A Pokemon has a Name, Pokedex ID(Not the ID generated by psql),
  and Type. This data should all be being fetched from the Pokemon
  API. No two Pokemon in the DB should have the same Pokemon ID or
  Name
  """

  use Ecto.Schema
  import Ecto.Changeset

  @fields ~w(
    name
    pokedex_id
    type
  )a

  schema "pokemon" do
    field :name, :string
    field :pokedex_id, :integer
    field :type, :string

    timestamps()
  end

  def changeset(pokemon, attrs) do
    pokemon
    |> cast(attrs, @fields)
    |> validate_required(@fields)
    |> unsafe_validate_unique(:pokedex_id, ElixirDex.Repo)
    |> unsafe_validate_unique(:name, ElixirDex.Repo)
    |> unique_constraint(:name)
    |> unique_constraint(:pokedex_id)
  end
end
